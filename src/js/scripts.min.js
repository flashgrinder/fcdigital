(function(){function r(e,n,t){function o(i,f){if(!n[i]){if(!e[i]){var c="function"==typeof require&&require;if(!f&&c)return c(i,!0);if(u)return u(i,!0);var a=new Error("Cannot find module '"+i+"'");throw a.code="MODULE_NOT_FOUND",a}var p=n[i]={exports:{}};e[i][0].call(p.exports,function(r){var n=e[i][1][r];return o(n||r)},p,p.exports,r,e,n,t)}return n[i].exports}for(var u="function"==typeof require&&require,i=0;i<t.length;i++)o(t[i]);return o}return r})()({1:[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

var isMobile = window.matchMedia('(max-width: 1024px)').matches;
var rAF;

var Marquee3k = /*#__PURE__*/function () {
  function Marquee3k(element, options) {
    _classCallCheck(this, Marquee3k);

    this.element = element;
    this.selector = options.selector; // this.speed = element.dataset.speed || 0.25;

    this.speed = element.dataset.speed || (isMobile ? 0.4 : 1.3);
    this.pausable = element.dataset.pausable;
    this.reverse = element.dataset.reverse;
    this.paused = false;
    this.parent = element.parentElement;
    this.parentProps = this.parent.getBoundingClientRect(); // eslint-disable-next-line

    this.content = element.children[0];
    this.innerContent = this.content.innerHTML;
    this.wrapStyles = '';
    this.offset = 0;

    this._setupWrapper();

    this._setupContent();

    this._setupEvents();

    this.wrapper.appendChild(this.content);
    this.element.appendChild(this.wrapper);
  }

  _createClass(Marquee3k, [{
    key: "_setupWrapper",
    value: function _setupWrapper() {
      this.wrapper = document.createElement('div');
      this.wrapper.classList.add('marquee3k__wrapper');
      this.wrapper.style.whiteSpace = 'nowrap';
    }
  }, {
    key: "_setupContent",
    value: function _setupContent() {
      this.content.classList.add("".concat(this.selector, "__copy"));
      this.content.style.display = 'inline-block';
      this.contentWidth = this.content.offsetWidth;
      this.requiredReps = this.contentWidth > this.parentProps.width ? 2 : Math.ceil((this.parentProps.width - this.contentWidth) / this.contentWidth) + 1;

      for (var i = 0; i < this.requiredReps; i++) {
        this._createClone();
      }

      if (this.reverse) {
        this.offset = this.contentWidth * -1;
      }

      this.element.classList.add('is-init');
    }
  }, {
    key: "_setupEvents",
    value: function _setupEvents() {
      var _this = this;

      this.element.addEventListener('mouseenter', function () {
        if (_this.pausable) _this.paused = true;
      });
      this.element.addEventListener('mouseleave', function () {
        if (_this.pausable) _this.paused = false;
      });
    }
  }, {
    key: "_createClone",
    value: function _createClone() {
      var clone = this.content.cloneNode(true);
      clone.style.display = 'inline-block';
      clone.classList.add("".concat(this.selector, "__copy"));
      this.wrapper.appendChild(clone);
    }
  }, {
    key: "animate",
    value: function animate() {
      if (!this.paused) {
        var isScrolled = this.reverse ? this.offset < 0 : this.offset > this.contentWidth * -1;
        var direction = this.reverse ? -1 : 1;
        var reset = this.reverse ? this.contentWidth * -1 : 0;
        if (isScrolled) this.offset -= this.speed * direction;else this.offset = reset;
        this.wrapper.style.whiteSpace = 'nowrap';
        this.wrapper.style.transform = "translate(".concat(this.offset, "px, 0) translateZ(0)");
      }
    }
  }, {
    key: "_refresh",
    value: function _refresh() {
      this.contentWidth = this.content.offsetWidth;
    }
  }, {
    key: "repopulate",
    value: function repopulate(difference, isLarger) {
      this.contentWidth = this.content.offsetWidth;

      if (isLarger) {
        var amount = Math.ceil(difference / this.contentWidth) + 1;

        for (var i = 0; i < amount; i++) {
          this._createClone();
        }
      }
    }
  }], [{
    key: "refresh",
    value: function refresh(index) {
      window.MARQUEES[index]._refresh();
    }
  }, {
    key: "refreshAll",
    value: function refreshAll() {
      for (var i = 0; i < window.MARQUEES.length; i++) {
        window.MARQUEES[i]._refresh();
      }
    }
  }, {
    key: "init",
    value: function init() {
      var _this2 = this;

      var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {
        selector: 'marquee3k'
      };
      window.MARQUEES = [];
      var marquees = Array.from(document.querySelectorAll(".".concat(options.selector)));
      var previousWidth = window.innerWidth;
      var timer;

      for (var i = 0; i < marquees.length; i++) {
        var marquee = marquees[i];
        var instance = new Marquee3k(marquee, options);
        window.MARQUEES.push(instance);
      }

      function animate() {
        for (var _i = 0; _i < window.MARQUEES.length; _i++) {
          window.MARQUEES[_i].animate();
        }

        rAF = window.requestAnimationFrame(animate);
      }

      animate();
      window.addEventListener('resize', function () {
        clearTimeout(timer);
        timer = setTimeout(function () {
          var isLarger = previousWidth < window.innerWidth;
          var difference = window.innerWidth - previousWidth;

          for (var _i2 = 0; _i2 < window.MARQUEES.length; _i2++) {
            window.MARQUEES[_i2].repopulate(difference, isLarger);
          }

          previousWidth = _this2.innerWidth;
        });
      }, 250);
    }
  }, {
    key: "destroy",
    value: function destroy() {
      if (rAF) {
        cancelAnimationFrame(rAF);
      }
    }
  }]);

  return Marquee3k;
}();

exports.default = Marquee3k;

},{}],2:[function(require,module,exports){
"use strict";

var _Marquee3k = _interopRequireDefault(require("../libs/modules/Marquee3k.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

window.addEventListener('DOMContentLoaded', function (e) {
  _Marquee3k.default.init();
});

},{"../libs/modules/Marquee3k.js":1}]},{},[2]);
